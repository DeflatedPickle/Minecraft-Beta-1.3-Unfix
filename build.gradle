buildscript {
    repositories {
        mavenCentral()
        maven { url 'http://files.minecraftforge.net/maven' }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:$forgegradle_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.diffplug.spotless:spotless-plugin-gradle:$spotless_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'com.diffplug.spotless'
apply plugin: 'net.minecraftforge.gradle'

version = "${minecraft_version()}-$mod_version"
group = "com.${developer.toLowerCase()}"
archivesBaseName = "$mod_id"

sourceCompatibility = targetCompatibility = "$jvm_version"
compileJava {
    sourceCompatibility = targetCompatibility = "$jvm_version"
}

minecraft {
    mappings channel: "$mappings_channel", version: "${minecraft_version()}"

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                squidmilk {
                    source sourceSets.main
                }
            }
        }

        server {
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                squidmilk {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.console.level', 'debug'

            args '--mod', "$mod_id".toString(), '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources')

            mods {
                squidmilk {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    mavenCentral()
    maven { url "https://www.cursemaven.com/" }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version()}-$forge_version"
    implementation "curse.maven:kotlinforforge-351264:$kotlinforforge_version"
}

jar {
    manifest {
        attributes([
                "Specification-Title": project.name,
                "Specification-Vendor": "$group",
                "Specification-Version": "${archiveVersion}",
                "Implementation-Title": project.name,
                "Implementation-Version": "${archiveVersion}",
                "Implementation-Vendor" : "$group",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "$jvm_version"
    }
}

sourceSets.main.resources {
    srcDirs 'src/generated/resources/'
}

spotless {
    java {
        importOrder()
        removeUnusedImports()
        googleJavaFormat()

        licenseHeader "/* $license_header */\n\n"
    }

    kotlin {
        ktlint()

        licenseHeader "/* $license_header */\n\n"
    }
}

String minecraft_version() {
    return "$minecraft_major.$minecraft_minor.$minecraft_patch"
}

String minecraft_version_short() {
    return "$minecraft_major.$minecraft_minor"
}
