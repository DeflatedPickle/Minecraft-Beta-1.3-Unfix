buildscript {
    repositories {
        maven { url 'http://files.minecraftforge.net/maven' }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:$forgegradle_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.diffplug.spotless:spotless-plugin-gradle:$spotless_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'com.diffplug.gradle.spotless'
apply plugin: 'net.minecraftforge.gradle.forge'

version = "${minecraft_version()}-$mod_version"
group = "com.${developer.toLowerCase()}.$mod_id"
archivesBaseName = "$mod_id"

sourceCompatibility = targetCompatibility = "$jvm_version"
compileJava {
    sourceCompatibility = targetCompatibility = "$jvm_version"
}

minecraft {
    version = "${minecraft_version()}-$forge_version"
    runDir = "run"
    mappings = "${mappings_channel}_$mappings_version"
}

repositories {
    mavenCentral()
    maven { url "https://www.cursemaven.com/" }
}

dependencies {
    implementation "curse.maven:forgelin-248453:$forgelin_version"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "$jvm_version"
    }
}

spotless {
    java {
        importOrder()
        removeUnusedImports()
        googleJavaFormat()

        licenseHeader "/* $license_header */\n\n"
    }

    kotlin {
        ktlint()

        licenseHeader "/* $license_header */\n\n"
    }
}

String minecraft_version() {
    return "$minecraft_major.$minecraft_minor.$minecraft_patch"
}
